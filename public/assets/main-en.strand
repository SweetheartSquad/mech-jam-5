::start
// some info for if you want to mod it:
//
// basic syntax examples:
// 	::passage title
// 	[[basic link]]
// 	[[link with different label>passage title]]
// 	[[link with different action|this.something=true;this.goto('passage title');]]
// 	<<if this.something>><<elseif this.somethingElse>><<endif>>
// 	<<do this.something=true;>>
// 	<<print this.something>>
// 	>passage break
//
// js examples:
// 	this.goto('passage')
// 	this.showL('texture', { duration, x, y, scale, animate, freq })
// 	this.showR('texture', { duration, x, y, scale, animate, freq })
// 	this.scrim(amount, duration)
// 	this.tween(object, 'property', to, duration, from, ease)
// 	this.gameObject - npc/interrupt that triggered the dialog
// 	this.scene      - game scene
// 	this.voice      - audio to play as letters tick in
// 	this.ease       - easing functions
//
// game object stuff:
// 	this.Area(name, [objects])
// 	this.Prop({ texture, x, y, alpha, scale, flip, blur, animate, offset })
// 	this.PropParallax({ texture, alpha, scale, flip, blur, mult, animate, offset }),

<<if !this.started>>
<<do
	// middle mouse click to go back in debug
	if (this.debug && !window.debugBack) {
		window.debugBack = true;
		window.addEventListener('pointerdown', (event) => {
			if (event.button === 1) {
				window.scene.strand.back();
			}
		});
	}

	this.Area('empty', []);

	// start
	this.started=true;
	this.tween(this.scene.dialogue.sprBg, 'alpha', 1, 500);
	this.tween(this.scene.border.display.container, 'alpha', 1, 500);

	// add syntax sugar for passages like `Guy angry: Blah blah.`
	this.portrait = '';
	const check = /(\w+|".*?")(\s+\w*)?:\s*/;
	this.scene.dialogue.sayo = this.scene.dialogue.say;
	this.scene.dialogue.say = (text, actions) => {
		const match = check.exec(text);
		if (match) {
			this.portrait = ['portrait', match[1], match[2] ].filter(i => i).map(i => i.trim()).join(' ').replace('"','').replace('"','');
			this[match[1] === 'Songbird' ? 'showL' : 'showR'](this.portrait);
			requestAnimationFrame(() => this.scene.dialogue.pos = match[1].length+2);
			this.scene.dialogue.voice = (match[1] || '').replace('"','').replace('"','');
			this.scene.dialogue.sayo(`${match[1].toUpperCase()}:\n${text.substring(match[0].length)}`, actions);
		} else {
			this.scene.dialogue.sayo(text, actions);
		}
	};


	// blinking and lip flaps
	// this.blinking = false;
	// this.timeoutBlinking;
	this.scene.dialogue.scripts.push({
		gameObject: this.scene.dialogue,
		update: () => {
			if (!this.portrait) return;
			// if (!this.timeoutBlinking) {
			// 	this.timeoutBlinking = setTimeout(() => {
			// 		this.blinking = !this.blinking;
			// 		this.timeoutBlinking = null;
			// 	}, this.blinking ? 100 : 2000+Math.random()*4000);
			// };

			const letter = this.scene.dialogue.strText[scene.dialogue.pos];
			const isLetter = letter && letter.replace(/[^\w]/, '');
			const toggler = this.portrait.includes('Songbird') ? this.scene.dialogue.togglerL : this.scene.dialogue.togglerR;
			if (isLetter) {
				toggler.active.setAnimation(`${this.portrait} open`);
			} else {
				toggler.active.setAnimation(this.portrait);
			}
		},
	});
>>
<<endif>>
<<do this.showL('');this.portrait=''>>
<<do this.showR('');this.portrait=''>>
FLEETWOOD MECH
[[START]]
[[PORTRAIT TEST]]
[[OPTIONS]]
[[ABOUT]]

::OPTIONS
idk if we have any?
[[BACK|this.back()]]

::ABOUT
<<do this.showR('sweetheart squad')>>
MADE BY
  SEAN
    MICHAEL
      IAN
        OF "SWEETHEART SQUAD"
 
FOR "MECH JAM V"
[[MORE MECH JAM ENTRIES|window.open('https://itch.io/jam/mechjam5/entries', '_blank')]]
[[MORE SWEETHEART SQUAD GAMES|window.open('https://sweetheartsquad.itch.io', '_blank')]]
[[BACK|this.back()]]

::START
<<do
	this.showL('');
	this.showR('');
	this.music('bgm');
	this.goto('main');
>>

::PORTRAIT TEST
Songbird: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras sed egestas justo, vitae lacinia nulla. Curabitur semper, ligula viverra dictum placerat, ex ex pharetra 
>
Danny: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras sed egestas justo, vitae lacinia nulla. Curabitur semper, ligula viverra dictum placerat, ex ex pharetra 
>
Diane: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras sed egestas justo, vitae lacinia nulla. Curabitur semper, ligula viverra dictum placerat, ex ex pharetra 
>
Judy: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras sed egestas justo, vitae lacinia nulla. Curabitur semper, ligula viverra dictum placerat, ex ex pharetra 
>
Madge: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras sed egestas justo, vitae lacinia nulla. Curabitur semper, ligula viverra dictum placerat, ex ex pharetra 
>
Murrow: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras sed egestas justo, vitae lacinia nulla. Curabitur semper, ligula viverra dictum placerat, ex ex pharetra 
>
Rhiannon: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras sed egestas justo, vitae lacinia nulla. Curabitur semper, ligula viverra dictum placerat, ex ex pharetra 
>
Sara: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras sed egestas justo, vitae lacinia nulla. Curabitur semper, ligula viverra dictum placerat, ex ex pharetra 
>
"Woman of 1000 Years": Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras sed egestas justo, vitae lacinia nulla. Curabitur semper, ligula viverra dictum placerat, ex ex pharetra 
[[>start]]

::close
this should never render

::choiceDefault



::debug menu
[[passage select>passage select]]
[[language select]]
[[close]]
[[back|this.back()]]

::main
<<do
	this.sfx('voiceDefault');
	this.goto('close');

	this.next = 'diplomat';
	this.scene.start();
	this.scene.loadMech('player', {
		head: 'Tallboy 2000',
		chest: '1',
		arms: '1',
		legs: '2',
		modules: [],
	});

	this.scene.locked['module debug locked'] = true;
	this.scene.locked['head debug locked'] = true;
>>








::scenes
actual written scenes below



::diplomat prebuild
todo diplomat prebuild stuff
[[>close]]

::diplomat prefight
todo diplomat prefight stuff
<<do this.scene.loadMech('enemy', {
    "head": "Tallboy 2000",
    "chest": "1",
    "arms": "1",
    "legs": "2",
    "modules": [
        { "name": "debug cockpit","x": 7,"y": 0,"flipH": false,"flipV": false,"turns": 0 },
        { "name": "debug attack","x": 8,"y": 1,"flipH": false,"flipV": false,"turns": 0 },
        { "name": "debug attack","x": 8,"y": 2,"flipH": false,"flipV": false,"turns": 0 },
        { "name": "debug attack","x": 8,"y": 3,"flipH": false,"flipV": false,"turns": 0 },
        { "name": "debug heat","x": 6,"y": 1,"flipH": false,"flipV": false,"turns": 0 },
        { "name": "debug heat","x": 6,"y": 2,"flipH": false,"flipV": false,"turns": 0 },
        { "name": "debug heat","x": 6,"y": 3,"flipH": false,"flipV": false,"turns": 0 },
        { "name": "debug shield","x": 7,"y": 3,"flipH": false,"flipV": false,"turns": 0 },
        { "name": "debug shield","x": 7,"y": 4,"flipH": false,"flipV": false,"turns": 0  },
        { "name": "debug radar","x": 7,"y": 5,"flipH": false,"flipV": false,"turns": 0  },
        { "name": "debug radar","x": 7,"y": 6,"flipH": false,"flipV": false,"turns": 0  },
    ]
});>>

[[>close]]

::diplomat postfight
todo diplomat postfight stuff
<<if !this.won>>
lol you lost
[[>close]]
<<else>>
<<do this.next = 'signal failure'>>
<<do
	this.scene.costMax += 1000;
	this.scene.locked['module debug locked'] = false;
	this.scene.locked['head debug locked'] = false;
>>
wow you won
[[>close]]
<<endif>>


::signal failure prebuild
todo signal failure prebuild stuff
[[>close]]

::signal failure prefight
todo signal failure prefight stuff
<<do this.scene.loadMech('enemy', {
	"head": "7",
	"chest": "9",
	"arms": "6",
	"legs": "1",
	"modules": [
		{ "name": "debug cockpit", "x": 0, "y": 10, "flipH": false, "flipV": false, "turns": 0 },
		{ "name": "debug cockpit", "x": 12, "y": 10, "flipH": false, "flipV": false, "turns": 0 },
		{ "name": "debug cockpit", "x": 4, "y": 20, "flipH": false, "flipV": false, "turns": 0 },
		{ "name": "debug cockpit", "x": 8, "y": 20, "flipH": false, "flipV": false, "turns": 0 },
		{ "name": "debug cockpit", "x": 6, "y": 0, "flipH": false, "flipV": false, "turns": 0 },
		{ "name": "debug heat", "x": 1, "y": 10, "flipH": false, "flipV": false, "turns": 0 },
		{ "name": "debug heat", "x": 1, "y": 11, "flipH": false, "flipV": false, "turns": 0 },
		{ "name": "debug heat", "x": 2, "y": 10, "flipH": false, "flipV": false, "turns": 0 },
		{ "name": "debug heat", "x": 2, "y": 11, "flipH": false, "flipV": false, "turns": 0 },
		{ "name": "debug heat", "x": 2, "y": 12, "flipH": false, "flipV": false, "turns": 0 },
		{ "name": "debug heat", "x": 11, "y": 10, "flipH": false, "flipV": false, "turns": 0 },
		{ "name": "debug heat", "x": 11, "y": 11, "flipH": false, "flipV": false, "turns": 0 },
		{ "name": "debug heat", "x": 10, "y": 10, "flipH": false, "flipV": false, "turns": 0 },
		{ "name": "debug heat", "x": 10, "y": 11, "flipH": false, "flipV": false, "turns": 0 },
		{ "name": "debug heat", "x": 10, "y": 12, "flipH": false, "flipV": false, "turns": 0 },
		{ "name": "debug heat", "x": 5, "y": 20, "flipH": false, "flipV": false, "turns": 0 },
		{ "name": "debug heat", "x": 5, "y": 19, "flipH": false, "flipV": false, "turns": 0 },
		{ "name": "debug heat", "x": 5, "y": 18, "flipH": false, "flipV": false, "turns": 0 },
		{ "name": "debug heat", "x": 7, "y": 20, "flipH": false, "flipV": false, "turns": 0 },
		{ "name": "debug heat", "x": 7, "y": 19, "flipH": false, "flipV": false, "turns": 0 },
		{ "name": "debug heat", "x": 7, "y": 18, "flipH": false, "flipV": false, "turns": 0 },
	],
})>>
[[>close]]

::signal failure postfight
todo signal failure postfight stuff
<<if !this.won>>
lol you lost
[[>close]]
<<else>>
<<do this.next = 'end'>>
wow you won
[[>close]]
<<endif>>


::end prefight
todo ending














::parts
part definitions below



::head Block
blah blah blah
---
auto
---
000
000
.=.

::head Tee
blah blah blah
---
auto
---
00000
.000.
.===.
..=..

::head Small
blah blah blah
---
auto
---
0
0
=

::head Smaller
blah blah blah
---
auto
---
0
=

::head Tallboy 2000
A menacing, angular head unit. Towers above foes. It's staring, daring them to go for the mechanical jugular.
---
auto
---
.0.
0.0.
0.0.
000.
.0..
000.
.0..
.=..

::head 2
blah blah blah
---
auto
---
0...0
00.00
.000.
00000
.000.
..=..

::head 3
blah blah blah
---
auto
---
...0..
.00000
0000000
..000..
0000000
.00000.
...=...

::head 4
blah blah blah
---
auto
---
000....000
0.0....0.0
0000000000
..0.00.0..
....==

::head 5
blah blah blah
---
auto
---
..0...
.000..
00000.
.000..
00000.
..=...

::head 6
blah blah blah
---
auto
---
.0000000.
0000.0000
000...000
.0000000.
.0..0..0.
....=

::head 7
blah blah blah
---
auto
---
..00..
..00..
.0000.
00..00
000000
.0000.
..==..

::chest 1
blah blah blah
---
-150
---
...=
...0..
=00000=
...0...
...0
...0
...0
...0
...0
..=0=
....

::chest 2
blah blah blah
---
auto
---
..=..
=0=0=
.000.
.000.
0=0=0

::chest 3
blah blah blah
---
+1000
---
.===
==.==
==.==
.===

::chest 4
blah blah blah
---
auto
---
...=...
=00000=
.00000.
0000000
0000000
.00000.
..=0=..

::chest 5
blah blah blah
---
auto
---
...0=0..
.0000000
000000000
=0000000=
.0000000.
..00000..
=00...00=

::chest 6
blah blah blah
---
auto
---
.0..=..0
.00.0.00
=0000000=
...000....
..00000...
..00000...
...000...
..=0.0=

::chest 7
blah blah blah
---
auto
---
..00=00
.0000000
=0000000=
.0000000
.0000000
=000.000=

::chest 8
blah blah blah
---
auto
---
00=00
00000
=0.0=
00.00
00000
=...=

::chest 9
blah blah blah
---
-200
---
.=.
0.0
000
=0=
000
0.0
=.=

::arm 1
blah blah blah
---
auto
---
.0.
.0.
.00=
000=
.0.


::arm 2
blah blah blah
---
auto
---
0=
0=

::arm 3
blah blah blah
---
auto
---
...0=
0000=
0....
00...

::arm 4
blah blah blah
---
auto
---
.000=
.000=
00..

::arm 5
blah blah blah
---
auto
---
...=
.00=
00
.00

::arm 6
blah blah blah
---
auto
---
0000=
.000=
..00
...0

::arm 7
blah blah blah
---
auto
---
0.0=
000=
0.0.

::arm 8
blah blah blah
---
auto
---
0000=
0000
00
.0

::arm 9
blah blah blah
---
auto
---
00..
00.=
.00=
00..

::leg 1
blah blah blah
---
auto
---
.0=
00.
00.
.00
.00
..0
.00


::leg 2
blah blah blah
---
auto
---
..=
.0=
00.
00.
00
00
00
00
00
00
00
00

::leg 3
blah blah blah
---
auto
---
..0=
000
.0.
00.

::leg 4
blah blah blah
---
auto
---
..=
..0
.00
00
.00
.00
00.

::leg 5
blah blah blah
---
auto
---
..=
.00
.0
000
.0
.0
000

::leg 6
blah blah blah
---
auto
---
...=
..00
.00.
.000
.00
.000
0000
0000

::leg 7
blah blah blah
---
auto
---
..=
000
000
000
.0
.0

::leg 8
blah blah blah
---
auto
---
...=
0000
.00
.000
00
000

::leg 9
blah blah blah
---
auto
---
..=
.00
000
000
0.0
0.0









::modules
module definitions below


::module Compact Cockpit
Cold, cramped, a prison without walls... but it keeps the lights on.
---
auto, cockpit, flexible
---
0

::module Comfortable Cockpit
Sometimes you only need one to have fun, but some redundancy can't hurt.
---
auto, cockpit
---
00
00

::module Commander's Cockpit
Discounted from a decommissioned orbital platform. Comes with backup monitors, seats wrapped in velvet, and a voided warranty.
---
auto, cockpit, awkward
---
000
000
000

::module Cheap Plating
Scraps of bronze hastily fashioned into defensive plating by the nearest star. A solid one-two block.
---
auto, armour, flexible
---
00

::module Standard Plating
Modular steel, available anywhere this side of the Kuiper belt. The best defense is a big ol' slate of gun-metal grey.
---
auto, armour
---
00
00

::module Superior Plating
A premium panel of interlocking nanocarbon alloys. Stronger than a magic spell and wider than the widest sea.
---
auto, armour, awkward
---
000
000
000

::module Enchanter
Her shots ring like a bell through the night.
 
AIM +1
---
auto, attack
---
000
.0.
.0.

::module Big Love
She's somewhere between a pneumatic drill and a sharpened knife.
 
AIM +1
---
auto, attack
---
.0.
000
000


::module Heartless Challenge
She'll break down your mech. She'll shatter your illusions.
 
AIM +2
---
auto, attack, attack
---
.0.
000
.0.


::module Sweet Omega
She'll bring you joy. You know she can destroy.
 
AIM +2
---
auto, attack, attack
---
.0
00000
.0

::module shield 1
TODO: description
 
SHIELD +1
---
auto, shield
---
00.
.00

::module shield 2
TODO: description
 
SHIELD +2
---
auto, shield, shield
---
.000
000.

::module shield 3
TODO: description
 
SHIELD +3
---
auto, shield, shield, shield
---
.000
.00
000.

::module shield 4
TODO: description
 
SHIELD +3
---
auto, shield, shield, shield, awkward
---
...000
..00
000..

::module Bar2
TODO: description
 
SCAN +1
---
auto, radar, flexible
---
000


::module fork
A fork
TODO: description
 
SCAN +2
---
auto, radar, radar
---
00
.00
00

::module square
TODO: description
 
SCAN +3
---
auto, radar, radar, radar
---
000
0.0
000
---
1,0

::module radar 1
A double fork
TODO: description
 
SCAN +4
---
auto, radar, radar, radar, radar, awkward
---
00.00
.000.
00.00

::module sink 5
TODO: description
 
HEAT +1
---
auto, heatsink, flexible
---
0
00
---
0,1

::module sink 6
TODO: description
 
HEAT +2
---
auto, heatsink, heatsink
---
00
0
000
---
0,2

::module sink 2
TODO: description
 
HEAT +3
---
auto, heatsink, heatsink, heatsink
---
00000
....0
00000
---
4,1

::module sink 3
TODO: description
 
HEAT +3
---
auto, heatsink, heatsink, heatsink
---
00000
0...0
0...0
....0
---
2,0

::module sink 1
TODO: description
 
HEAT +3
---
auto, heatsink, heatsink, heatsink
---
0000
0...
0...
0000
---
0,1

::module sink 4
TODO: description
 
HEAT +3
---
auto, heatsink, heatsink, heatsink, awkward
---
00000
0..00
..000
---
3,1

::module sink 7
TODO: description
 
HEAT +4
---
auto, heatsink, heatsink, heatsink, heatsink, awkward
---
00..0
0..00
0..00
00000
---
3,2


::module extender 4
TODO: description
---
auto, joint, flexible
---
0
000

::module extender 2
A long squiggle
TODO: description
---
auto, joint
---
00
.00000

::module extender 1
A long L
TODO: description
---
auto, joint
---
.....0
000000

::module extender 3
A huge L
TODO: description
---
auto, joint, awkward
---
0
0
0
0
000000
---
0,4





::module debug cockpit
debug cockpit
---
1, cockpit, debug
---
0

::module debug heat
debug heatsink
---
1, heatsink, debug
---
0

::module debug attack
debug attack
---
1, attack, debug
---
0

::module debug shield
debug shield
---
1, shield, debug
---
0

::module debug joint
debug joint
---
1, joint, debug
---
0

::module debug radar
debug radar
---
1, radar, debug
---
0

::module debug locked
debug module to test module locking
---
1, debug
---
.000.
0...0
00000
00000
00000
00000

::head debug locked
debug head to test part locking
---
auto
---
.000.
0...0
00000
00=00
0===0
00=00
